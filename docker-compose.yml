version: '3.1'

services:

  mongo-express:
    image: mongo-express
    container_name: 'mongo-express'
    ports:
      - "3000:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: no_sql
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2024!
      ME_CONFIG_MONGODB_AUTHDATABASE: root
    depends_on:
      - no_sql

  no_sql:
    image: 'mongo:8.0.1'
    container_name: 'mongo'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: MongoDB2024!
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/var/lib/mongo/data

  db:
    image: 'postgres:15.0'
    container_name: 'postgres'
    restart: always
    ports:
      - "5555:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
        - db_data:/var/lib/postgresql/data

  fake-smtp:
    image: 'mailhog/mailhog:latest'
    container_name: 'mailhog'
    restart: always
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: 'rabbitmq:3.10.5-management'
    container_name: 'rabbitmq'
    restart: always
    ports:
    - "5672:5672"
    - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_log:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 12s
      timeout: 10s
      retries: 5

  app:
    build: .
    container_name: 'app'
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      - db
      - rabbitmq
      - fake-smtp
    volumes:
      - .:/app

volumes:
  rabbitmq_data:
  rabbitmq_log:
  db_data:
  mongo_data: